type TokenIndex @entity {
	id: ID!
	index_: Index!
	underlyingSet: Index!
	rebalances: [Rebalance!] @derivedFrom(field: "index_")
}

type Index @entity {
	id: ID!
	address: Bytes!
	name: String!
	symbol: String!
	supply: BigInt!
	components: [Bytes!]
	units: [BigInt!]
	naturalUnit: BigInt!
	issuances: [Issuance!] @derivedFrom(field: "index_")
	redemptions: [Redemption!] @derivedFrom(field: "index_")
}

type Issuance @entity {
	id: ID!
	index_: Index!
	account: Bytes!
	amount: BigInt!
	timestamp: BigInt!
}

type Redemption @entity {
	id: ID!
	index_: Index!
	account: Bytes!
	amount: BigInt!
	timestamp: BigInt!
}

type Transfer @entity {
	id: ID!
	index_: Index!
	from: Bytes!
	to: Bytes!
	value: BigInt!
	timestamp: BigInt!
}

type Rebalance @entity {
	id: ID!
	index_: TokenIndex!
	oldIndex: Index!
	newIndex: Index!
	timestamp: BigInt!
}

type Balance @entity {
	id: ID!
	index_: TokenIndex!
	user: User!
	balance: BigInt!
}

type User @entity {
	id: ID!
	balances: [Balance!] @derivedFrom(field: "user")
}
